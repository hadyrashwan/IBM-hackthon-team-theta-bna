/**
 * Defines a data model for a blind vehicle auction
 */
namespace org.acme.food.Subsidy


asset package identified by id {
  o String id
  o String packgingType
  o String location optional
  o Long numberOfItems
  o Boolean warningFlag optional
  // o String[] factorsParticipants
  o Double initalCost optional
  o Double currentCost optional
  o Double price optional
  o Double expectedCostAfterArrival optional
  o String currency optional
  --> package parentPackage optional
  --> package[] childrenPackage optional
  o String rfidOfThePackage optional
  o String[] rfidOfItemsIncluded 
  o Long weight
  o Long weightCracked optional
  o String weightUnit
  // o String trackingNumber 
  // o String[] images optional
  o Long lastSeenTimeStamp 
  o Boolean isOpen default = false
  --> packageInitiator creator
  // --> approver[] approvals 
  --> transporter[] transporter optional
  // --> transporter lastTransporter optional
  // --> approver lastApprover optional
  --> transporter initalTransporter optional
  --> transporter expectedToReceive optional
}
asset capital identified by id {
  o String id
  o String description
  o String amountTotal
  o String amountSpendByDistributor
  o String amountSpendByPackageInitiator
  o String amountSpendByTransporter
  o String amountSpendByApprovers
  o String amountSpendByRegulators
  o Boolean warningFlag
  --> regulator[] regulators
  --> approver[] approvers
  --> packageInitiator[] packageInitiators
  --> transporter[] transporters
  --> distributor[] distributors
  --> capitalHolder capitalHolder

}

asset alarm identified by id {
  o String id
  o String reason
  o String transactionID
}

asset complain identified by id{
  o String id
  o String complain
  o String transactionID optional
}

asset claimMoney identified by id{
  o String id
  o String complain
  o String money
  o String transactionID optional
}

asset  bill identified by id {
  o String id
  o Double amount
  o String description
  o String typeOftParticipan
  o String participanID
  --> capital capital
  --> regulator regulator
  --> capitalHolder capitalHolder
}
// enum ListingState {
//   o FOR_SALE
//   o RESERVE_NOT_MET
//   o SOLD
// }

participant capitalHolder identified by id {
  o String id
  o String name
  o String email
}

participant packageInitiator identified by id {
  o String name
  o String email
  o String typeOfEntity
  o String id
  --> capitalHolder createdBy optional
}
participant transporter identified by id {
  o String id
  o String location
  o String name
  o String email
  o String entityRelated
  o String destination optional
  o String[] privlages optional
  --> capitalHolder createdBy optional
  --> package[] currentHoldingPackges optional
  o String roadRelated
}

participant distributor identified by id {
  o String id
  o String location
  o String name
  o String email
  o String entityRelated
  o String[] privlages optional
  --> capitalHolder createdBy optional
  --> package[] currentHoldingPackges optional
}
participant regulator identified by id {
  o String id
  o String location
  o String name
  o String email
  o String entityRelated
}
participant approver identified by id {
  o String id
  o String location
  o String name
  o String email
  o String entityRelated
}

// transaction giveMoney {
//   o Double money
//   o String description
//   o String CapitalId
// }

// transaction createPackage {
//   o String packgaType
//   o String location
//   o Double weight
//   o String weightUnit
//   o String[] rfidOfItemsIncluded
//   o Double numberOfItems
//   --> packageInitiator packageInitiator
// }

// transaction splitPackage { // split packga to 2 packges
// }
transaction approveTransaction {
  o String[] rfidOfItemsIncluded optional
  o Long weight
  --> package packageSent
  --> transporter transporter optional
}
transaction disturbte {
  o String nationalID
  o String uniqueNumber optional
  o String assestType
  o Double numberOfItems
  --> distributor distributor
}